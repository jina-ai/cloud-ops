name: (wolf) Serverless API Deployment

on:
  workflow_dispatch:
    inputs:
      release_token:
        description: 'Your release token'
        required: true
      release_reason:
        description: 'Short reason for this manual release'
        required: true
      branch:
        description: Pass the wolf branch/tag name
        default: main
        required: false
      stage:
        description: Pass the wolf env stage
        default: dev
        required: false
        
jobs:
  token-check:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/github-script@v3
        with:
          script: |
            core.setFailed('token are not equivalent!')
        if: github.event.inputs.release_token != env.release_token
        env:
          release_token: ${{ secrets.WOLF_RELEASE_TOKEN }}
  serverless-deploy-functions:
    needs: token-check
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          repository: jina-ai/wolf
          ref: ${{ github.event.inputs.branch }}
          token: ${{ secrets.JINA_DEV_BOT }}
      - name: Install Node.js
        uses: actions/setup-node@v2
      - uses: actions/setup-python@v2
        with:
          python-version: 3.7
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1
      - name: Install Serverless & Deploy App
        run: |
          echo "run serverless deploy script"
          bash serverless-deploy.sh 
        env:
          API_GATEWAY_STAGE: ${{ github.event.inputs.stage }}
          WOLF_ADMIN: ${{ secrets.WOLF_ADMIN }}
          WOLF_LOGIN_TOKEN: ${{ secrets.WOLF_LOGIN_TOKEN }}
          WOLF_ATLAS_USERS: ${{ secrets.WOLF_ATLAS_USERS }}
          WOLF_ATLAS_LOGSTREAM: ${{ secrets.WOLF_ATLAS_LOGSTREAM }}
          WOLF_FLOW_TERMINATE_JD: ${{ secrets.WOLF_FLOW_TERMINATE_JD }}
          WOLF_FLOW_NORMALIZE_JD: ${{ secrets.WOLF_FLOW_NORMALIZE_JD }}
          WOLF_FLOW_TERMINATE_QUEUE: ${{ secrets.WOLF_FLOW_TERMINATE_QUEUE }}
          WOLF_FLOW_NORMALIZE_QUEUE: ${{ secrets.WOLF_FLOW_NORMALIZE_QUEUE }}
          DOCSQA_JINA_DEV_BOT: ${{ secrets.DEEPANKAR_ACCESS_TOKEN }}
          DOCSQA_GITHUB_TOKEN: ${{ secrets.DOCSQA_GITHUB_TOKEN }}
          WOLF_ATLAS_HOSTNAME: ${{ secrets.WOLF_ATLAS_HOSTNAME }}
          WOLF_ATLAS_DATABASE: ${{ secrets.WOLF_ATLAS_DATABASE }}
          WOLF_ATLAS_FLOWS: ${{ secrets.WOLF_ATLAS_FLOWS }}
          WOLF_ATLAS_HISTORY: ${{ secrets.WOLF_ATLAS_HISTORY }}
          WOLF_ATLAS_USERNAME: ${{ secrets.WOLF_ATLAS_USERNAME }}
          WOLF_ATLAS_PASSWORD: ${{ secrets.WOLF_ATLAS_PASSWORD }}
          WOLF_FLOW_POST_JD: ${{ secrets.WOLF_FLOW_POST_JD }}
          WOLF_FLOW_POST_QUEUE: ${{ secrets.WOLF_FLOW_POST_QUEUE }}
          WOLF_WHO_IS_USING_JD: ${{ secrets.WOLF_WHO_IS_USING_JD }}
          WOLF_WHO_IS_USING_QUEUE: ${{ secrets.WOLF_WHO_IS_USING_QUEUE }}
          WOLF_GIT_USER: ${{ secrets.WOLF_GIT_USER }}
          WOLF_GIT_TOKEN: ${{ secrets.WOLF_GIT_TOKEN }}
