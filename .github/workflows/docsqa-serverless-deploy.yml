name: (docsqa) Serverless deployment

on:
  workflow_dispatch:
    inputs:
      branch:
        description: Pass the docsQA branch/tag name
        default: main
        required: false
        
jobs:
  serverless-deploy-functions:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          repository: jina-ai/docsQA
          ref: ${{ github.event.inputs.branch }}
          token: ${{ secrets.JINA_DEV_BOT }}
      - name: Install Node.js
        uses: actions/setup-node@v2
      - uses: actions/setup-python@v2
        with:
          python-version: 3.7
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1
      - name: Install Serverless & Deploy App
        run: |
          npm install -g serverless@2.72.2 serverless-python-requirements serverless-domain-manager
          python -m pip install --upgrade pip
          pip install -r serverless-requirements.txt
          bash serverless-deploy.sh
        env:
          JINA_CLOUDFLARE_ZONE: ${{ secrets.JINA_CLOUDFLARE_ZONE }}
          JINA_CLOUDFLARE_TOKEN: ${{ secrets.JINA_CLOUDFLARE_TOKEN }}
          DOCSQA_ADMIN: ${{ secrets.DOCSQA_ADMIN }}
          DOCSQA_JINA_DEV_BOT: ${{ secrets.DEEPANKAR_ACCESS_TOKEN }}
          DOCSQA_GITHUB_TOKEN: ${{ secrets.DOCSQA_GITHUB_TOKEN }}
          DOCSQA_SLACK_WEBHOOK: ${{ secrets.DOCSQA_SLACK_WEBHOOK }}
          DOCSQA_ATLAS_HOSTNAME: ${{ secrets.DOCSQA_ATLAS_HOSTNAME }}
          DOCSQA_ATLAS_DATABASE: ${{ secrets.DOCSQA_ATLAS_DATABASE }}
          DOCSQA_ATLAS_PROJECTS: ${{ secrets.DOCSQA_ATLAS_PROJECTS }}
          DOCSQA_ATLAS_METADATA: ${{ secrets.DOCSQA_ATLAS_METADATA }}
          DOCSQA_ATLAS_USERNAME: ${{ secrets.DOCSQA_ATLAS_USERNAME }}
          DOCSQA_ATLAS_PASSWORD: ${{ secrets.DOCSQA_ATLAS_PASSWORD }}
          DOCSQA_PUBLISH_REPO_JD: ${{ secrets.DOCSQA_PUBLISH_REPO_JD }}
          DOCSQA_PUBLISH_REPO_QUEUE: ${{ secrets.DOCSQA_PUBLISH_REPO_QUEUE }}
          DOCSQA_EXTERNAL_DEPLOYMENT_JD: ${{ secrets.DOCSQA_EXTERNAL_DEPLOYMENT_JD }}
          DOCSQA_EXTERNAL_DEPLOYMENT_QUEUE: ${{ secrets.DOCSQA_EXTERNAL_DEPLOYMENT_QUEUE }}
          DOCSQA_WOLF_TOKEN: ${{ secrets.JCLOUD_TOKEN }}
        working-directory: ./service
     
