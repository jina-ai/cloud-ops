---
AWSTemplateFormatVersion: '2010-09-09'
Description: Template to run stress-test for Jina on AWS
Parameters:
  EC2ImageIdParam:
    Type: String
    Default: ami-00831fc7c1e3ddc60
    Description: Enter Image ID. Default is for Ubuntu 20.04
  EC2InstanceTypeParam:
    Type: String
    Default: t2.micro
  KeyNameParam:
    Type: String
    Default: flow-login
    Description: Enter Key Name. Default is flow-login.
  VolumeSizeParam:
    Type: Number
    Default: 20
    Description: Enter EBS volume size (type gp2). Default is 20GB.
  AvailabilityZoneParam:
    Type: String
    Default: us-west-1a
    Description: Enter Availability Zone for EC2. Default is us-west-1a
  UserData:
    Type: String
    Default: ""
Resources:
  daemonVPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: 10.0.0.0/16
      EnableDnsSupport: 'false'
      EnableDnsHostnames: 'false'
      InstanceTenancy: dedicated
      Tags:
       - Key: num-pods
         Value: 4

  crafterSubnet:
      Type: AWS::EC2::Subnet
      Properties:
        VpcId: !Ref daemonVPC
        CidrBlock: 10.0.1.0/24
        AvailabilityZone:
          Ref: AvailabilityZoneParam

  encoderSubnet:
      Type: AWS::EC2::Subnet
      Properties:
        VpcId: !Ref daemonVPC
        CidrBlock: 10.0.0.0/24
        AvailabilityZone:
          Ref: AvailabilityZoneParam

  indexerSubnet:
      Type: AWS::EC2::Subnet
      Properties:
        VpcId: !Ref daemonVPC
        CidrBlock: 10.0.2.0/24
        AvailabilityZone:
          Ref: AvailabilityZoneParam

  rankerSubnet:
      Type: AWS::EC2::Subnet
      Properties:
        VpcId: !Ref daemonVPC
        CidrBlock: 10.0.3.0/24
        AvailabilityZone:
          Ref: AvailabilityZoneParam

  flowSubnet:
      Type: AWS::EC2::Subnet
      Properties:
        VpcId: !Ref daemonVPC
        CidrBlock: 10.0.4.0/24
        AvailabilityZone:
          Ref: AvailabilityZoneParam

  InstanceSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
        GroupDescription: Allow http to client host
        VpcId:
           Ref: daemonVPC
        SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIp: 0.0.0.0/0
        SecurityGroupEgress:
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIp: 0.0.0.0/0

  SSHSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
        GroupDescription: Enable SSH access to instance
        SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 22
          ToPort: 22
          CidrIp: 0.0.0.0/0

  encoderInstance:
    Type: AWS::EC2::Instance
    Properties:
      ImageId:
        Ref: EC2ImageIdParam
      InstanceType:
        Ref: EC2InstanceTypeParam
      KeyName:
        Ref: KeyNameParam
      SecurityGroups: [!Ref 'SSHSecurityGroup']

#  EncoderEIP:
#    Type: AWS::EC2::EIP
#    Properties:
#      InstanceId: !Ref encoderInstance

  encoderVolume:
    Type: AWS::EC2::Volume
    Properties:
      Size: 20
      AvailabilityZone: !GetAtt encoderInstance.AvailabilityZone
      Tags:
        - Key: encoder-vol
          Value: custom
    DeletionPolicy: Snapshot

  encoderMountPoint:
    Type: AWS::EC2::VolumeAttachment
    Properties:
      InstanceId: !Ref encoderInstance
      VolumeId: !Ref encoderVolume
      Device: /dev/sdh

  crafterInstance:
    Type: AWS::EC2::Instance
    Properties:
      ImageId:
        Ref: EC2ImageIdParam
      InstanceType:
        Ref: EC2InstanceTypeParam
      KeyName:
        Ref: KeyNameParam
      SecurityGroups: [!Ref 'SSHSecurityGroup']

#  CrafterEIP:
#    Type: AWS::EC2::EIP
#    Properties:
#      InstanceId: !Ref crafterInstance

  crafterVolume:
    Type: AWS::EC2::Volume
    Properties:
      Size: 20
      AvailabilityZone: !GetAtt crafterInstance.AvailabilityZone
      Tags:
        - Key: crafter-vol
          Value: custom
    DeletionPolicy: Snapshot

  crafterMountPoint:
    Type: AWS::EC2::VolumeAttachment
    Properties:
      InstanceId: !Ref crafterInstance
      VolumeId: !Ref crafterVolume
      Device: /dev/sdh

  indexerInstance:
    Type: AWS::EC2::Instance
    Properties:
      ImageId:
        Ref: EC2ImageIdParam
      InstanceType:
        Ref: EC2InstanceTypeParam
      KeyName:
        Ref: KeyNameParam
      SecurityGroups: [!Ref 'SSHSecurityGroup']

#  IndexerEIP:
#    Type: AWS::EC2::EIP
#    Properties:
#      InstanceId: !Ref indexerInstance

  indexerVolume:
    Type: AWS::EC2::Volume
    Properties:
      Size: 20
      AvailabilityZone: !GetAtt indexerInstance.AvailabilityZone
      Tags:
        - Key: indexer-vol
          Value: custom
    DeletionPolicy: Snapshot

  indexerMountPoint:
    Type: AWS::EC2::VolumeAttachment
    Properties:
      InstanceId: !Ref indexerInstance
      VolumeId: !Ref indexerVolume
      Device: /dev/sdh

  rankerInstance:
    Type: AWS::EC2::Instance
    Properties:
      ImageId:
        Ref: EC2ImageIdParam
      InstanceType:
        Ref: EC2InstanceTypeParam
      KeyName:
        Ref: KeyNameParam
      SecurityGroups: [!Ref 'SSHSecurityGroup']

#  RankerEIP:
#    Type: AWS::EC2::EIP
#    Properties:
#      InstanceId: !Ref rankerInstance

  rankerVolume:
    Type: AWS::EC2::Volume
    Properties:
      Size: 20
      AvailabilityZone: !GetAtt rankerInstance.AvailabilityZone
      Tags:
        - Key: ranker-vol
          Value: custom
    DeletionPolicy: Snapshot

  rankerMountPoint:
    Type: AWS::EC2::VolumeAttachment
    Properties:
      InstanceId: !Ref rankerInstance
      VolumeId: !Ref rankerVolume
      Device: /dev/sdh

  flowInstance:
    Type: AWS::EC2::Instance
    Metadata:
      AWS::CloudFormation::Init:
        config:
#          packages:
#            - "jina"
          commands:
            - "echo sample command"
          configSets:
            installationScript:
              - "installationConfig"
          installationConfig:
            commands:
              test:
                command: "curl -L https://raw.githubusercontent.com/jina-ai/cloud-ops/master/scripts/deb-systemd.sh | bash" # "echo test command"
                env:
                  CFNTEST: "config-1."
                cwd: "~"
#            packages:
#              - "pip":
#                  - "jina"
    Properties:
      ImageId:
        Ref: EC2ImageIdParam
      InstanceType:
        Ref: EC2InstanceTypeParam
      KeyName:
        Ref: KeyNameParam
      SecurityGroups: [!Ref 'SSHSecurityGroup']
      UserData:
        Fn::Base64:
          Fn::Join:
          - ''
          - - "#!/bin/bash -xe\n"
            - 'yum install -y aws-cfn-bootstrap

              '
            - "# Install the files and packages from the metadata\n"
            - "/opt/aws/bin/cfn-init -v "
            - "         --stack "
            - Ref: AWS::StackName
            - "         --resource flowInstance "
            - "         --configsets installationScript "
            - "         --region "
            - Ref: AWS::Region
            - "\n"
            - "# Signal the status from cfn-init\n"
            - "/opt/aws/bin/cfn-signal -e $? "
            - "         --stack "
            - Ref: AWS::StackName
            - "         --resource flowInstance "
            - "         --region "
            - Ref: AWS::Region
            - "\n"

  FlowEIP:
    Type: AWS::EC2::EIP
    Properties:
      InstanceId: !Ref flowInstance

  FlowVolume:
    Type: AWS::EC2::Volume
    Properties:
      Size: 20
      AvailabilityZone: !GetAtt flowInstance.AvailabilityZone
      Tags:
        - Key: flow-vol
          Value: custom
    DeletionPolicy: Snapshot

  FlowMountPoint:
    Type: AWS::EC2::VolumeAttachment
    Properties:
      InstanceId: !Ref flowInstance
      VolumeId: !Ref FlowVolume
      Device: /dev/sdh

  clientInstance:
    Type: AWS::EC2::Instance
    Properties:
      ImageId:
        Ref: EC2ImageIdParam
      InstanceType:
        Ref: EC2InstanceTypeParam
      KeyName:
        Ref: KeyNameParam
      SecurityGroups: [!Ref 'SSHSecurityGroup']

  ClientEIP:
    Type: AWS::EC2::EIP
    Properties:
      InstanceId: !Ref clientInstance

  clientVolume:
    Type: AWS::EC2::Volume
    Properties:
      Size: 20
      AvailabilityZone: !GetAtt clientInstance.AvailabilityZone
      Tags:
        - Key: client-vol
          Value: custom
    DeletionPolicy: Snapshot

  clientMountPoint:
    Type: AWS::EC2::VolumeAttachment
    Properties:
      InstanceId: !Ref clientInstance
      VolumeId: !Ref clientVolume
      Device: /dev/sdh


Outputs:
  FlowEIPAllocationId:
    Value: !GetAtt FlowEIP.AllocationId  #Value: !Ref FlowEIP
    Export:
      Name: "FlowEIP"
  ClientEIPAllocationId:
    Value: !GetAtt ClientEIP.AllocationId  #Value: !Ref ClientEIP
    Export:
      Name: "ClientEIP"
#  CrafterEIPAllocationId:
#    Value: !GetAtt IndexerEIP.AllocationId  #Value: !Ref CrafterEIP
#    Export:
#      Name: "CrafterEIP"
#  IndexerEIPAllocationId:
#    Value: !GetAtt IndexerEIP.AllocationId  #Value: !Ref IndexerEIP
#    Export:
#      Name: "IndexerEIP"
#  EncoderEIPAllocationId:
#    Value: !GetAtt EncoderEIP.AllocationId  #Value: !Ref EncoderEIP
#    Export:
#      Name: "EncoderEIP"
#  RankerEIPAllocationId:
#    Value: !GetAtt RankerEIP.AllocationId  #Value: !Ref RankerEIP
#    Export:
#      Name: "RankerEIP"